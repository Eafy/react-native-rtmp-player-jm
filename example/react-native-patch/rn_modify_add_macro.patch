--- a/node_modules/react-native/React/Base/RCTBridgeModule.h
+++ b/node_modules/react-native/React/Base/RCTBridgeModule.h
@@ -74,6 +74,17 @@
 + (void)load { RCTRegisterModule(self); }
 
 /**
+ * Same as RCT_EXPORT_MODULE, but uses __attribute__((constructor)) for module
+ * registration. Useful for registering swift classes that forbids use of load
+ * Used in RCT_EXTERN_REMAP_MODULE
+ */
+#define RCT_EXPORT_MODULE_NO_LOAD(js_name, objc_name) \
+RCT_EXTERN void RCTRegisterModule(Class); \
++ (NSString *)moduleName { return @#js_name; } \
+__attribute__((constructor)) static void \
+RCT_CONCAT(initialize_, objc_name)() { RCTRegisterModule([objc_name class]); }
+
+/**
  * To improve startup performance users may want to generate their module lists
  * at build time and hook the delegate to merge with the runtime list. This
  * macro takes the place of the above for those cases by omitting the +load
@@ -250,7 +261,7 @@
   @interface objc_name (RCTExternModule) <RCTBridgeModule> \
   @end \
   @implementation objc_name (RCTExternModule) \
-  RCT_EXPORT_MODULE(js_name)
+  RCT_EXPORT_MODULE_NO_LOAD(js_name, objc_name)
 
 /**
  * Use this macro in accordance with RCT_EXTERN_MODULE to export methods
@@ -323,10 +334,29 @@
 @end
 
 /**
+ * A protocol that allows TurboModules to do lookup on other TurboModules.
+ * Calling these methods may cause a module to be synchronously instantiated.
+ */
+ @protocol RCTTurboModuleLookupDelegate <NSObject>
+ - (id)moduleForName:(const char *)moduleName;
+
+ /**
+  * Rationale:
+  * When TurboModules lookup other modules by name, we first check the TurboModule
+  * registry to see if a TurboModule exists with the respective name. In this case,
+  * we don't want a RedBox to be raised if the TurboModule isn't found.
+  *
+  * This method is deprecated and will be deleted after the migration from
+  * TurboModules to TurboModules is complete.
+  */
+ - (id)moduleForName:(const char *)moduleName warnOnLookupFailure:(BOOL)warnOnLookupFailure;
+ - (BOOL)moduleIsInitialized:(const char *)moduleName;
+ @end
+
+/**
  * Experimental.
  * A protocol to declare that a class supports TurboModule.
  * This may be removed in the future.
+ * See RCTTurboModule.h for actual signature.
  */
-@protocol RCTTurboModule <NSObject>
-
-@end
+@protocol RCTTurboModule;
